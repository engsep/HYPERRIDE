# See original file:
# docker run --rm nginx cat /etc/nginx/conf.d/default.conf

server {
    listen 80;
    listen [::]:80;
    server_name _;

    # Handle ACME challenge requests for Let's Encrypt by Certbot
    location ~ /.well-known/acme-challenge {
      allow all;
      root /var/www/certbot;
    }

    # Proxy NGSI-LD @context files also in HTTP
    location /data-models {
        alias /home/www/public_html/localhost/public/data-models;
        try_files $uri $uri/ =404;
        # index index.html index.htm;
        autoindex on;
    }

    # Proxy HTTP requests to Keycloak (https://www.keycloak.org/server/reverseproxy)
    # TODO location ~* /(auth|realms|resources) { proxy_pass http://keycloak:8080;...
    location /idm {
        proxy_pass http://keycloak:8080/idm/;
      # proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_protocol_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port ${HTTP_PORT};
    }

    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$host:${HTTPS_PORT}$request_uri;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name _;

    # ssl_certificate /etc/letsencrypt/live/engsep.duckdns.org/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/engsep.duckdns.org/privkey.pem;
    ssl_certificate /etc/letsencrypt/live/${FULL_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${FULL_DOMAIN}/privkey.pem;

    # Add CORS headers
    add_header 'Access-Control-Allow-Credentials' "true";
    add_header 'Access-Control-Allow-Origin' "*";
    add_header 'Access-Control-Allow-Methods' "GET, POST, PUT, DELETE, PATCH, OPTIONS, HEAD";
    add_header 'Access-Control-Allow-Headers' "*";
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # Path without authentication: /orion/version
    location /orion/version {
        proxy_pass http://orion:1026/version;
    }

    # Path without authentication: /orion/ngsi-ld/ex/v1/version
    location /orion/ngsi-ld/ex/v1/version {
        proxy_pass http://orion:1026/ngsi-ld/ex/v1/version;
    }

    # Proxy requests to Orion-LD with authentication
    location /orion/ {
        proxy_pass http://orion:1026/;
        auth_request /auth;
    }

    # Internal location for authentication requests
    location = /auth {
        internal;
        proxy_pass http://keycloak:8080/idm/realms/dedalus/protocol/openid-connect/userinfo;
        proxy_set_header Authorization $http_authorization;
    }

    # Proxy requests to Node-RED
    location ~* /(api|dashboard|editor|notarize|ui|verify|worldmap) {
        client_max_body_size 200M;
        proxy_pass http://node-red:1880;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }

    # Proxy requests to Portainer
    location /dockeradmin/ {
        proxy_pass http://portainer:9000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        rewrite ^/dockeradmin/(.*)$ /$1 break;
    }

    # Proxy requests to Mongo Express
    location /mongoadmin {
        proxy_pass http://mongo-express:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy requests to Wazuh Dashboard
    location /wazuh/ {
        proxy_pass http://wazuh-dashboard:5601/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        rewrite ^/wazuh/(.*)$ /$1 break;
    }

    # Proxy static web site
    location /dedalus-ontology/ {
        alias /home/www/public_html/localhost/public/uploads/docs/;
        try_files $uri $uri/ =404;
        index index.html index-en.html;
        autoindex on;
    }

    # Proxy requests to the test Orion-LD broker provided by Smart Data Models
    location ^~ /smartdatamodels/ {
        proxy_pass https://smartdatamodels.org:1026/;
    }

    # Proxy requests to Ganache
    location ^~ /ganache/ {
        proxy_pass http://ganache:7545/;

        # Enable WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Pass the original headers and client information to the backend server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy requests to an external web page (example.org)
    location /example/ {
        proxy_pass http://example.org/;
    }

    # Proxy requests to an external web service ("show my IP")
    location /ip {
        resolver 8.8.8.8;
        proxy_pass http://ifconfig.me;
        rewrite ^/ip/(.*)$ /$1 break;
    }

    # Test proxy vars (https://nginx.org/en/docs/varindex.html)
    location /test {
        default_type text/plain;
        return 200 "
            Server Name: $server_name\n
            Server IP: $server_addr\n
            Server Port: $server_port\n
            Hostname: $hostname\n
            Remote IP: $remote_addr\n
            Remote Port: $remote_port\n
            SSL Cipher: $ssl_cipher\n
            SSL Protocol: $ssl_protocol\n
            Nginx Version: $nginx_version\n
            Document Root: $document_root\n
            Document URI: $document_uri\n
            Request Filename: $request_filename\n
            Request Method: $request_method\n
            Request URI: $request_uri\n
            Request: $request\n
            Host: $host\n
            User Agent: $http_user_agent\n
            Accept Language: $http_accept_language\n
            HTTP Cookie: $http_cookie\n
            Time: $time_local\n
            Status: $status\n";
    }

    # Default web server page
    location /default {
        alias /usr/share/nginx/html;
        index index.html index.htm;
    }

    # Custom web server page (home of the demo)
    location / {
        root /home/www/public_html/localhost/public/;
        index index.html index.htm;
        try_files $uri $uri/ index.html =404;
        autoindex on;
    }

    # Custom error page for 401 (Unauthorized)
    error_page 401 = @error401;
    location @error401 {
        return 401 '"Unauthorized"';
        add_header Content-Type application/json;
    }

    # Custom error pages for 50x (Server errors)
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
